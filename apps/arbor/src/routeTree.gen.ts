/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as SignupIndexImport } from './routes/signup/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AuthedDashboardRouteImport } from './routes/_authed/dashboard/route'
import { Route as AuthedDashboardResumesIndexImport } from './routes/_authed/dashboard/resumes/index'
import { Route as AuthedDashboardPersonalInformationIndexImport } from './routes/_authed/dashboard/personal-information/index'
import { Route as AuthedDashboardGenerateIndexImport } from './routes/_authed/dashboard/generate/index'
import { Route as AuthedDashboardCoverLettersIndexImport } from './routes/_authed/dashboard/cover-letters/index'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignupIndexRoute = SignupIndexImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedDashboardRouteRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedDashboardResumesIndexRoute =
  AuthedDashboardResumesIndexImport.update({
    id: '/resumes/',
    path: '/resumes/',
    getParentRoute: () => AuthedDashboardRouteRoute,
  } as any)

const AuthedDashboardPersonalInformationIndexRoute =
  AuthedDashboardPersonalInformationIndexImport.update({
    id: '/personal-information/',
    path: '/personal-information/',
    getParentRoute: () => AuthedDashboardRouteRoute,
  } as any)

const AuthedDashboardGenerateIndexRoute =
  AuthedDashboardGenerateIndexImport.update({
    id: '/generate/',
    path: '/generate/',
    getParentRoute: () => AuthedDashboardRouteRoute,
  } as any)

const AuthedDashboardCoverLettersIndexRoute =
  AuthedDashboardCoverLettersIndexImport.update({
    id: '/cover-letters/',
    path: '/cover-letters/',
    getParentRoute: () => AuthedDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed/dashboard/cover-letters/': {
      id: '/_authed/dashboard/cover-letters/'
      path: '/cover-letters'
      fullPath: '/dashboard/cover-letters'
      preLoaderRoute: typeof AuthedDashboardCoverLettersIndexImport
      parentRoute: typeof AuthedDashboardRouteImport
    }
    '/_authed/dashboard/generate/': {
      id: '/_authed/dashboard/generate/'
      path: '/generate'
      fullPath: '/dashboard/generate'
      preLoaderRoute: typeof AuthedDashboardGenerateIndexImport
      parentRoute: typeof AuthedDashboardRouteImport
    }
    '/_authed/dashboard/personal-information/': {
      id: '/_authed/dashboard/personal-information/'
      path: '/personal-information'
      fullPath: '/dashboard/personal-information'
      preLoaderRoute: typeof AuthedDashboardPersonalInformationIndexImport
      parentRoute: typeof AuthedDashboardRouteImport
    }
    '/_authed/dashboard/resumes/': {
      id: '/_authed/dashboard/resumes/'
      path: '/resumes'
      fullPath: '/dashboard/resumes'
      preLoaderRoute: typeof AuthedDashboardResumesIndexImport
      parentRoute: typeof AuthedDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface AuthedDashboardRouteRouteChildren {
  AuthedDashboardCoverLettersIndexRoute: typeof AuthedDashboardCoverLettersIndexRoute
  AuthedDashboardGenerateIndexRoute: typeof AuthedDashboardGenerateIndexRoute
  AuthedDashboardPersonalInformationIndexRoute: typeof AuthedDashboardPersonalInformationIndexRoute
  AuthedDashboardResumesIndexRoute: typeof AuthedDashboardResumesIndexRoute
}

const AuthedDashboardRouteRouteChildren: AuthedDashboardRouteRouteChildren = {
  AuthedDashboardCoverLettersIndexRoute: AuthedDashboardCoverLettersIndexRoute,
  AuthedDashboardGenerateIndexRoute: AuthedDashboardGenerateIndexRoute,
  AuthedDashboardPersonalInformationIndexRoute:
    AuthedDashboardPersonalInformationIndexRoute,
  AuthedDashboardResumesIndexRoute: AuthedDashboardResumesIndexRoute,
}

const AuthedDashboardRouteRouteWithChildren =
  AuthedDashboardRouteRoute._addFileChildren(AuthedDashboardRouteRouteChildren)

interface AuthedRouteChildren {
  AuthedDashboardRouteRoute: typeof AuthedDashboardRouteRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedDashboardRouteRoute: AuthedDashboardRouteRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/dashboard': typeof AuthedDashboardRouteRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/dashboard/cover-letters': typeof AuthedDashboardCoverLettersIndexRoute
  '/dashboard/generate': typeof AuthedDashboardGenerateIndexRoute
  '/dashboard/personal-information': typeof AuthedDashboardPersonalInformationIndexRoute
  '/dashboard/resumes': typeof AuthedDashboardResumesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/dashboard': typeof AuthedDashboardRouteRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/dashboard/cover-letters': typeof AuthedDashboardCoverLettersIndexRoute
  '/dashboard/generate': typeof AuthedDashboardGenerateIndexRoute
  '/dashboard/personal-information': typeof AuthedDashboardPersonalInformationIndexRoute
  '/dashboard/resumes': typeof AuthedDashboardResumesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/dashboard': typeof AuthedDashboardRouteRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/_authed/dashboard/cover-letters/': typeof AuthedDashboardCoverLettersIndexRoute
  '/_authed/dashboard/generate/': typeof AuthedDashboardGenerateIndexRoute
  '/_authed/dashboard/personal-information/': typeof AuthedDashboardPersonalInformationIndexRoute
  '/_authed/dashboard/resumes/': typeof AuthedDashboardResumesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/dashboard/cover-letters'
    | '/dashboard/generate'
    | '/dashboard/personal-information'
    | '/dashboard/resumes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/dashboard/cover-letters'
    | '/dashboard/generate'
    | '/dashboard/personal-information'
    | '/dashboard/resumes'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/dashboard'
    | '/login/'
    | '/signup/'
    | '/_authed/dashboard/cover-letters/'
    | '/_authed/dashboard/generate/'
    | '/_authed/dashboard/personal-information/'
    | '/_authed/dashboard/resumes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/login/",
        "/signup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/dashboard"
      ]
    },
    "/_authed/dashboard": {
      "filePath": "_authed/dashboard/route.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/dashboard/cover-letters/",
        "/_authed/dashboard/generate/",
        "/_authed/dashboard/personal-information/",
        "/_authed/dashboard/resumes/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/signup/": {
      "filePath": "signup/index.tsx"
    },
    "/_authed/dashboard/cover-letters/": {
      "filePath": "_authed/dashboard/cover-letters/index.tsx",
      "parent": "/_authed/dashboard"
    },
    "/_authed/dashboard/generate/": {
      "filePath": "_authed/dashboard/generate/index.tsx",
      "parent": "/_authed/dashboard"
    },
    "/_authed/dashboard/personal-information/": {
      "filePath": "_authed/dashboard/personal-information/index.tsx",
      "parent": "/_authed/dashboard"
    },
    "/_authed/dashboard/resumes/": {
      "filePath": "_authed/dashboard/resumes/index.tsx",
      "parent": "/_authed/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
